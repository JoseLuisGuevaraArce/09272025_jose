name: Docker Angular Build - Final Project CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]


jobs:
  build-and-push:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/angularbasic:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/angularbasic:latest

      - name: Clean up old container (if exists)
        shell: powershell
        run: |
          try {
            docker rm -f angularapp | Out-Null
          } catch {
            Write-Host "Container 'angularapp' does not exist or could not be removed. Continuing..."
          }

      - name: Run the container from the image.
        run: docker run -d -p 8080:80 --name angularapp ${{ secrets.DOCKER_USERNAME }}/angularbasic:latest

      - name: Wait for the container to start.
        shell: powershell
        run: |
          $timeout = [datetime]::Now.AddSeconds(30)
          while ([datetime]::Now -lt $timeout) {
            try {
              $response = Invoke-WebRequest -Uri http://localhost:8080 -UseBasicParsing -TimeoutSec 5 -ErrorAction Stop
              if ($response.StatusCode -eq 200) {
                Write-Host "Container is up!"
                break
              }
            } catch {
              Write-Host "Waiting..."
            }
            Start-Sleep -Seconds 2
          }

      - name: Test my container response
        shell: powershell
        run: |
          $response = Invoke-WebRequest -Uri http://localhost:8080 -UseBasicParsing
          Write-Host "Response: $($response.Content)"
          if ($response.Content -like "*Hello, CI Pipeline!*") {
            Write-Host "Container responded successfully"
          } else {
            Write-Host "Test failed: Unexpected response"
            exit 1
          }

      - name: Stop and remove container
        if: always()
        shell: powershell
        run: |
          docker stop angularapp 2>$null
          docker rm angularapp 2>$null
